/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: rtodaro <marvin@42.fr>                     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/07/22 09:47:18 by rtodaro           #+#    #+#             */
/*   Updated: 2024/07/23 12:30:40 by rtodaro          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

int	checksign(char *str)
{
	int	i;
	int	sign;

	i = 0;
	sign = 1;
	while (str[i] == ' ' || str[i] == '\f' || str[i] == '\n'
		|| str[i] == '\r' || str[i] == '\t' || str[i] == '\v')
		i++;
	while (str[i] == '+' || str[i] == '-')
	{
		if (str[i] == '-')
			sign = -sign;
		i++;
	}
	return (sign);
}

int	findnum(char *str)
{
	int	i;

	i = 0;
	while (str[i] < '0' || str[i] > '9')
		i++;
	return (i);
}

int	checkstring(char *str)
{
	int	i;

	i = 0;
	while (str[i] != '\0')
	{
		if (str[i] >= '0' && str[i] <= '9')
			return (1);
		i++;
	}
	return (0);
}

int	checkprefix(char *str)
{
	int	i;

	i = 0;
	while (str[i] == ' ' || str[i] == '\f' || str[i] == '\n'
		|| str[i] == '\r' || str[i] == '\t' || str[i] == '\v')
		i++;
	while (str[i] == '+' || str[i] == '-')
		i++;
	if (str[i] < '0' || str[i] > '9')
		return (0);
	return (1);
}

int	ft_atoi(char *str)
{
	int	sign;
	int	i;
	int	num;

	if (checkstring(str) == 0)
		return (0);
	if (checkprefix(str) == 0)
		return (0);
	sign = checksign(str);
	i = findnum(str);
	num = 0;
	while (str[i] >= '0' && str[i] <= '9')
	{
		num = num + (str[i] - '0');
		if (str[i + 1] >= '0' && str[i + 1] <= '9')
			num = num * 10;
		i++;
	}
	return (num * sign);
}
